{
  "name": "handy",
  "description": "Common utility functions",
  "homepage": "https://github.com/openmason/handy",
  "version": "0.0.13",
  "author": {
    "name": "el aras",
    "email": "openmason@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": ">= 1.6.0",
    "should": ">= 1.2.0"
  },
  "keywords": [
    "handy",
    "utilities",
    "utility",
    "belt"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/openmason/handy"
  },
  "main": "index",
  "scripts": {
    "prepublish": "npm prune",
    "test": "make test"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "readme": "[![build status](https://secure.travis-ci.org/openmason/handy.png)](http://travis-ci.org/openmason/handy)\n\n# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns\n      * value of 'version' in package.json (or)\n      * emptry string if unable to find package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object', 'regex' ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * getFileExtension\n    * arguments\n      1. filename - filename for which the extension to be returned\n      2. defaultExt - default extension if no extension found\n    * returns - extension from the filename (or) defaultExt \n    \n            var handy = require('handy');\n            var x = \"abc/this/there.x.y.j\"\n            var r = handy.getFileExtension(x);\n            // r => 'j'\n\n  * isArrayEqual - check if two arrays are equal, irrespective of order of elements\n    * arguments: pass two array objects\n    * returns - true (if both arrays are equal), else false\n    \n            var handy = require('handy');\n            var x = [93,1,6], y=[6,93,1];\n            var r = handy.isArrayEqual(x,y);\n            // r => true\n\n  * isObjectEqual - check if two objects are equal, irrespective of order of keys (if value is an array, it is expected to be in same order)\n    * arguments: pass two objects\n    * returns - true (if both objects are equal), else false\n    \n            var handy = require('handy');\n            var x = {a:'hello', b:{scores:[1,2,3], name:'tal'}, id:123}, y={id:123,a:'hello',b:{name:'tal',scores:[1,2,3]}};\n            var r = handy.isObjectEqual(x,y);\n            // r => true\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/openmason/handy/issues"
  },
  "_id": "handy@0.0.13",
  "_from": "handy@>= 0.0.11"
}
