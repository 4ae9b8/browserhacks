/* *************** *
 * $HOME ANIMATION *
 * *************** */

/**
 * Default styles
 */
.catch-phrase {
    text-align: center;
    font-size: 1.3em;
    color: darken($sa,15%);
    text-shadow: 0 1px rgba(0,0,0,0.3);
    font-family: 'Montserrat', sans-serif;
    text-shadow: 0 .05em white;
    margin-top: 0;
    position: relative;
}

.catch-phrase__anim {
    color: $ie;
    position: absolute;
}

.catch-phrase__space {
    padding-left: 0.85em;
    padding-left: 1.25ch;
}

/**
 * All the spans from `.catch-phrase__anim` are hidden ...
 */
.catch-phrase__anim span {
  display: none;
   
    /**
	 * ... if CSS animations are supported,
	 * all the spans from .catch-phrase__anim are displayed
	 */
    .cssanimations & {
	  position: absolute;
	  opacity: 0;
	  display: block;
	}
}

/**
 * Mixin handling everything
 */
@mixin rotateWords($time, $words, $selector, $nameAnim: showWord, $easing: linear, $infinite: true) {
	$hidePoint  : percentage(1/ $words);
	$hidePointP : percentage(1/($words - 0.01));
	$browsers: '-webkit-', '-moz-', '';
	  
	#{$selector} span {
		@each $browser in $browsers {
			@if $infinite == true { 
		    	#{$browser}animation: #{$nameAnim} $words * $time + s #{$easing} infinite;
			} @else {
				#{$browser}animation: #{$nameAnim} $words * $time + s #{$easing};
			}
		}
	}
	  
	@for $i from 1 through $words {
		#{$selector} span:nth-child(#{$i}) {
			@each $browser in $browsers {
	    		#{$browser}animation-delay: ($i - 1) * $time + s;
	    	}
	    }
	}

	@-webkit-keyframes #{$nameAnim} {
	   	0%, #{$hidePoint}    { opacity:1; }
	    #{$hidePointP}, 100% { opacity:0; }
	}

	@-moz-keyframes #{$nameAnim} {
	   	0%, #{$hidePoint}    { opacity:1; }
	    #{$hidePointP}, 100% { opacity:0; }
	}

	@keyframes #{$nameAnim} {
	   	0%, #{$hidePoint}    { opacity:1; }
	    #{$hidePointP}, 100% { opacity:0; }
	}
}

/**
 * Call the mixin
 */
@include rotateWords(.5, 28, '.catch-phrase__anim');

